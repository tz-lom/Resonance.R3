// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Messages.capnp

#include "Messages.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<64> b_a01a0ba90e801b35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53,  27, 128,  14, 169,  11,  26, 160,
     15,   0,   0,   0,   1,   0,   2,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  70,
    105, 108, 101,  72, 101,  97, 100, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  32,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97,  99, 107, 101, 100,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a01a0ba90e801b35 = b_a01a0ba90e801b35.words;
#if !CAPNP_LITE
static const uint16_t m_a01a0ba90e801b35[] = {2, 1, 0};
static const uint16_t i_a01a0ba90e801b35[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a01a0ba90e801b35 = {
  0xa01a0ba90e801b35, b_a01a0ba90e801b35.words, 64, nullptr, m_a01a0ba90e801b35,
  0, 3, i_a01a0ba90e801b35, nullptr, nullptr, { &s_a01a0ba90e801b35, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f31dcf6b9187c096 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150, 192, 135, 145, 107, 207,  29, 243,
     15,   0,   0,   0,   2,   0,   0,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  66,
    108, 111,  99, 107,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 117,  98, 108, 101,   0,   0,
    105, 110, 116,  51,  50,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     98, 105, 110,  97, 114, 121,   0,   0, }
};
::capnp::word const* const bp_f31dcf6b9187c096 = b_f31dcf6b9187c096.words;
#if !CAPNP_LITE
static const uint16_t m_f31dcf6b9187c096[] = {3, 0, 1, 2};
const ::capnp::_::RawSchema s_f31dcf6b9187c096 = {
  0xf31dcf6b9187c096, b_f31dcf6b9187c096.words, 34, nullptr, m_f31dcf6b9187c096,
  0, 4, nullptr, nullptr, nullptr, { &s_f31dcf6b9187c096, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(BlockType_f31dcf6b9187c096, f31dcf6b9187c096);
static const ::capnp::_::AlignedData<84> b_a4dd58f14867a4ce = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    206, 164, 103,  72, 241,  88, 221, 164,
     15,   0,   0,   0,   1,   0,   3,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  68,
     97, 116,  97,  66, 108, 111,  99, 107,
     68, 111, 117,  98, 108, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 109, 112, 108, 101, 115,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 101, 105, 118, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a4dd58f14867a4ce = b_a4dd58f14867a4ce.words;
#if !CAPNP_LITE
static const uint16_t m_a4dd58f14867a4ce[] = {2, 3, 1, 0};
static const uint16_t i_a4dd58f14867a4ce[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a4dd58f14867a4ce = {
  0xa4dd58f14867a4ce, b_a4dd58f14867a4ce.words, 84, nullptr, m_a4dd58f14867a4ce,
  0, 4, i_a4dd58f14867a4ce, nullptr, nullptr, { &s_a4dd58f14867a4ce, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_81535e74c3cabf33 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51, 191, 202, 195, 116,  94,  83, 129,
     15,   0,   0,   0,   1,   0,   3,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  68,
     97, 116,  97,  66, 108, 111,  99, 107,
     73, 110, 116,  51,  50,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 109, 112, 108, 101, 115,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 101, 105, 118, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81535e74c3cabf33 = b_81535e74c3cabf33.words;
#if !CAPNP_LITE
static const uint16_t m_81535e74c3cabf33[] = {2, 3, 1, 0};
static const uint16_t i_81535e74c3cabf33[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_81535e74c3cabf33 = {
  0x81535e74c3cabf33, b_81535e74c3cabf33.words, 84, nullptr, m_81535e74c3cabf33,
  0, 4, i_81535e74c3cabf33, nullptr, nullptr, { &s_81535e74c3cabf33, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_e7d05ea88a49a6f1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    241, 166,  73, 138, 168,  94, 208, 231,
     15,   0,   0,   0,   1,   0,   2,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  68,
     97, 116,  97,  66, 108, 111,  99, 107,
     77, 101, 115, 115,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 101, 105, 118, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7d05ea88a49a6f1 = b_e7d05ea88a49a6f1.words;
#if !CAPNP_LITE
static const uint16_t m_e7d05ea88a49a6f1[] = {1, 2, 0};
static const uint16_t i_e7d05ea88a49a6f1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e7d05ea88a49a6f1 = {
  0xe7d05ea88a49a6f1, b_e7d05ea88a49a6f1.words, 65, nullptr, m_e7d05ea88a49a6f1,
  0, 3, i_e7d05ea88a49a6f1, nullptr, nullptr, { &s_e7d05ea88a49a6f1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_ab845c3cc34d0933 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51,   9,  77, 195,  60,  92, 132, 171,
     15,   0,   0,   0,   1,   0,   2,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  68,
     97, 116,  97,  66, 108, 111,  99, 107,
     66, 105, 110,  97, 114, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 101, 105, 118, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab845c3cc34d0933 = b_ab845c3cc34d0933.words;
#if !CAPNP_LITE
static const uint16_t m_ab845c3cc34d0933[] = {1, 2, 0};
static const uint16_t i_ab845c3cc34d0933[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ab845c3cc34d0933 = {
  0xab845c3cc34d0933, b_ab845c3cc34d0933.words, 65, nullptr, m_ab845c3cc34d0933,
  0, 3, i_ab845c3cc34d0933, nullptr, nullptr, { &s_ab845c3cc34d0933, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_cec8c42a27d274d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 116, 210,  39,  42, 196, 200, 206,
     15,   0,   0,   0,   1,   0,   2,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    116, 114, 101,  97, 109,  68, 101, 115,
     99, 114, 105, 112, 116, 111, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    150, 192, 135, 145, 107, 207,  29, 243,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cec8c42a27d274d1 = b_cec8c42a27d274d1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cec8c42a27d274d1[] = {
  &s_f31dcf6b9187c096,
};
static const uint16_t m_cec8c42a27d274d1[] = {2, 0, 3, 1};
static const uint16_t i_cec8c42a27d274d1[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_cec8c42a27d274d1 = {
  0xcec8c42a27d274d1, b_cec8c42a27d274d1.words, 79, d_cec8c42a27d274d1, m_cec8c42a27d274d1,
  1, 4, i_cec8c42a27d274d1, nullptr, nullptr, { &s_cec8c42a27d274d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_eef00d45a6c6a7e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 167, 198, 166,  69,  13, 240, 238,
     15,   0,   0,   0,   1,   0,   1,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    116, 114, 101,  97, 109, 101, 100,  68,
     97, 116,  97,  66, 108, 111,  99, 107,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    183, 169,  81,  86,  54,  39,  36, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eef00d45a6c6a7e8 = b_eef00d45a6c6a7e8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eef00d45a6c6a7e8[] = {
  &s_aa2427365651a9b7,
};
static const uint16_t m_eef00d45a6c6a7e8[] = {1, 0};
static const uint16_t i_eef00d45a6c6a7e8[] = {0, 1};
const ::capnp::_::RawSchema s_eef00d45a6c6a7e8 = {
  0xeef00d45a6c6a7e8, b_eef00d45a6c6a7e8.words, 49, d_eef00d45a6c6a7e8, m_eef00d45a6c6a7e8,
  1, 2, i_eef00d45a6c6a7e8, nullptr, nullptr, { &s_eef00d45a6c6a7e8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_9f1a5685639fa0ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255, 160, 159,  99, 133,  86,  26, 159,
     15,   0,   0,   0,   1,   0,   1,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    121, 115, 116, 101, 109,  76, 111, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 111, 109,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f1a5685639fa0ff = b_9f1a5685639fa0ff.words;
#if !CAPNP_LITE
static const uint16_t m_9f1a5685639fa0ff[] = {1, 2, 0};
static const uint16_t i_9f1a5685639fa0ff[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9f1a5685639fa0ff = {
  0x9f1a5685639fa0ff, b_9f1a5685639fa0ff.words, 64, nullptr, m_9f1a5685639fa0ff,
  0, 3, i_9f1a5685639fa0ff, nullptr, nullptr, { &s_9f1a5685639fa0ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_c0dd4bc6972dcf68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 207,  45, 151, 198,  75, 221, 192,
     15,   0,   0,   0,   1,   0,   1,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    121, 115, 116, 101, 109,  67, 111, 110,
    102, 105, 103,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0dd4bc6972dcf68 = b_c0dd4bc6972dcf68.words;
#if !CAPNP_LITE
static const uint16_t m_c0dd4bc6972dcf68[] = {1, 0};
static const uint16_t i_c0dd4bc6972dcf68[] = {0, 1};
const ::capnp::_::RawSchema s_c0dd4bc6972dcf68 = {
  0xc0dd4bc6972dcf68, b_c0dd4bc6972dcf68.words, 49, nullptr, m_c0dd4bc6972dcf68,
  0, 2, i_c0dd4bc6972dcf68, nullptr, nullptr, { &s_c0dd4bc6972dcf68, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_921685f2e96b431e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30,  67, 107, 233, 242, 133,  22, 146,
     15,   0,   0,   0,   1,   0,   1,   0,
    153, 157,  18,  74,  67, 120, 163, 252,
      1,   0,   7,   0,   0,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101, 115,
     46,  99,  97, 112, 110, 112,  58,  70,
    105, 108, 101,  73, 116, 101, 109,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209, 116, 210,  39,  42, 196, 200, 206,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,  66, 108, 111,  99,
    107,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    232, 167, 198, 166,  69,  13, 240, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255, 160, 159,  99, 133,  86,  26, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104, 207,  45, 151, 198,  75, 221, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_921685f2e96b431e = b_921685f2e96b431e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_921685f2e96b431e[] = {
  &s_9f1a5685639fa0ff,
  &s_c0dd4bc6972dcf68,
  &s_cec8c42a27d274d1,
  &s_eef00d45a6c6a7e8,
};
static const uint16_t m_921685f2e96b431e[] = {3, 1, 2, 0};
static const uint16_t i_921685f2e96b431e[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_921685f2e96b431e = {
  0x921685f2e96b431e, b_921685f2e96b431e.words, 78, d_921685f2e96b431e, m_921685f2e96b431e,
  4, 4, i_921685f2e96b431e, nullptr, nullptr, { &s_921685f2e96b431e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace Resonance {
namespace R2E {

// FileHeader
#ifndef _MSC_VER
constexpr uint16_t FileHeader::_capnpPrivate::dataWordSize;
constexpr uint16_t FileHeader::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FileHeader::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileHeader::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FileHeader::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DataBlockDouble
#ifndef _MSC_VER
constexpr uint16_t DataBlockDouble::_capnpPrivate::dataWordSize;
constexpr uint16_t DataBlockDouble::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DataBlockDouble::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataBlockDouble::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DataBlockDouble::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DataBlockInt32
#ifndef _MSC_VER
constexpr uint16_t DataBlockInt32::_capnpPrivate::dataWordSize;
constexpr uint16_t DataBlockInt32::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DataBlockInt32::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataBlockInt32::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DataBlockInt32::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DataBlockMessage
#ifndef _MSC_VER
constexpr uint16_t DataBlockMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t DataBlockMessage::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DataBlockMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataBlockMessage::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DataBlockMessage::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DataBlockBinary
#ifndef _MSC_VER
constexpr uint16_t DataBlockBinary::_capnpPrivate::dataWordSize;
constexpr uint16_t DataBlockBinary::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DataBlockBinary::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DataBlockBinary::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DataBlockBinary::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// StreamDescriptor
#ifndef _MSC_VER
constexpr uint16_t StreamDescriptor::_capnpPrivate::dataWordSize;
constexpr uint16_t StreamDescriptor::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind StreamDescriptor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StreamDescriptor::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* StreamDescriptor::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// StreamedDataBlock
#ifndef _MSC_VER
constexpr uint16_t StreamedDataBlock::_capnpPrivate::dataWordSize;
constexpr uint16_t StreamedDataBlock::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind StreamedDataBlock::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StreamedDataBlock::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* StreamedDataBlock::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SystemLog
#ifndef _MSC_VER
constexpr uint16_t SystemLog::_capnpPrivate::dataWordSize;
constexpr uint16_t SystemLog::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SystemLog::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SystemLog::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SystemLog::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SystemConfig
#ifndef _MSC_VER
constexpr uint16_t SystemConfig::_capnpPrivate::dataWordSize;
constexpr uint16_t SystemConfig::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SystemConfig::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SystemConfig::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SystemConfig::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// FileItem
#ifndef _MSC_VER
constexpr uint16_t FileItem::_capnpPrivate::dataWordSize;
constexpr uint16_t FileItem::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind FileItem::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FileItem::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* FileItem::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

